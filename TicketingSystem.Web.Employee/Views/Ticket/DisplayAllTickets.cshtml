@model TicketingSystem.Web.Employee.Models.TicketViewModel

<!DOCTYPE html>
<head>
    <link href="~/assets/libs/datatables.net-bs4/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/css/bootstrap-datepicker.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/css/bootstrap-datetimepicker.min.css">
    <style>
        table.dataTable td:nth-child(8), td:nth-child(7) {
            width: 100px;
            max-width: 100px;
            word-break: break-all;
            white-space: pre-line;
        }
    </style>
</head>
<html>
<body>
    <h2 class="text-danger">Tickets</h2>
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <table>
                    <tbody>
                        <tr>
                            <td>Priority</td>
                            <td>
                                @Html.DropDownListFor(model => model.Priority,
                               Enum.GetNames(typeof(TicketingSystem.Common.Enums.TicketPriority))
                               .Select(e => new SelectListItem { Text = e }), "All",
                               new { @id = "priority", @class = "form-control" })

                            </td>
                            <td>Status</td>
                            <td>
                                @Html.DropDownListFor(model => model.Status,
                              Enum.GetNames(typeof(TicketingSystem.Common.Enums.TicketStatus))
                              .Select(e => new SelectListItem { Text = e }), "All",
                              new { @id = "status", @class = "form-control" })
                            </td>

                            <td>Products</td>
                            <td>

                                @Html.DropDownListFor(model => model.Category,
                                Enum.GetNames(typeof(TicketingSystem.Common.Enums.TicketCategory))
                                .Select(e => new SelectListItem { Text = e }), "All",
                                new { @id = "category", @class = "form-control" })
                            </td>
                            <td>From</td>
                            <td class="input-daterange">

                                <input type="text" name="start_date" id="start_date" class="form-control" />
                            </td>
                            <td>To</td>
                            <td class="input-daterange">
                                <input type="text" name="end_date" id="end_date" class="form-control" />
                            </td>
                            <td>
                                <input type="button" class="btn waves-effect waves-light btn-rounded btn-sm btn-primary" value="Filter" id="btnSearch" />
                            </td>
                        </tr>
                    </tbody>
                </table>
                <br />
                <table class="table table-striped table-bordered" id="datatable">

                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Id)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Status)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Category)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Priority)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Title)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OpenDate)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model.EmployeeName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ClientName)
                            </th>
                            <th>
                                Assignment
                            </th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="~/Scripts/dataTable.js" type="text/javascript"></script>
    <script src="//cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="~/assets/libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"></script>

    <script type="text/javascript">

        $(function () {
            $('#start_date').datepicker();
            $('#end_date').datepicker();
        });
        var dataTable;
        $(document).ready(function () {
            dataTable = $('#datatable').DataTable({
                "columns": [
                    { "aaData": "ID" },
                    { "aaData": "Status" },
                    { "aaData": "Category" },
                    { "aaData": "Priority" },
                    {mRender: function(data, type, row) {
                                        var linkTitle = '@Html.ActionLink("this", "Ticket", new {id = -1 , title = "hash" } , new{@class= "" })';
                                    linkTitle = linkTitle.replace("-1", row[0]);
                                    linkTitle = linkTitle.replace("this", row[4]);
                                    linkTitle = linkTitle.replace("hash", hash(row[4]));
                                    function hash (s) {
                                        return s.split("").reduce(function (a, b) { a = ((a << 5) - a) + b.charCodeAt(0); return a & a }, 0);
                                    }
                                    console.log(hash(row[4]));
                                    return linkTitle;
                                    }

                                },
                    { "aaData": "OpenDate" },
                    { "aaData": "EmployeeName" },
                    { "aaData": "ClientName" }],
                ajax: {
                    "url": "/Ticket/GetAllTickets",
                    "type": "POST",
                    "dataSrc": "aaData",
                    "datatype": "json",
                    "data": function (data) {
                        var startDate = $('#start_date').val();
                        var endDate = $('#end_date').val();
                        data.startDate = startDate;
                        data.endDate = endDate;
                    }

                },

                "serverSide": true,
                "processing": true,
                "lengthMenu": [[5, 10, 20, 50], [5, 10, 20, 50]],
                "paging": true,
                "ordering": false,
                "columnDefs": [{
                    "targets": 8,
                    "render": function (data, type, row, meta) {
                        if (row[6] === ' ') {
                            var btn = " <a class = 'btn waves-effect waves-light btn-outline-success' style='color:black' onclick=PopupForm('@Url.Action("TicketAssignment", "Ticket",new { id=-1})')> Assign </a>"
                            btn = btn.replace("-1", row[0]);
                            return btn;

                        }
                        else if (row[1] === 'Unsolved') {
                            var btn = " <a class = 'btn waves-effect waves-light btn-outline-danger' style='color:black' onclick=PopupForm('@Url.Action("TicketAssignment", "Ticket",new { id=-1})')> Reassign </a>"
                            btn = btn.replace("-1", row[0]);
                            return btn;
                        }
                    },
                    "orderable": false,
                    "width": "150px",
                },
                    {
                        "targets": 4,
                "mRender": function(data, type, row) {
                                        var linkTitle = '@Html.ActionLink("this", "Ticket", new {id = -1 , title = "hash" } , new{@class= "" })';
                                    linkTitle = linkTitle.replace("-1", row[0]);
                                    linkTitle = linkTitle.replace("this", row[4]);
                                    linkTitle = linkTitle.replace("hash", hash(row[4]));
                                    function hash (s) {
                                        return s.split("").reduce(function (a, b) { a = ((a << 5) - a) + b.charCodeAt(0); return a & a }, 0);
                                    }
                                    console.log(hash(row[4]));
                                    return linkTitle;
                        },

                    },
                ]
            });

            //Apply Custom search on jQuery DataTables here
            oTable = $('#datatable').DataTable();
            $('#btnSearch').click(function () {
                oTable.columns(3).search($('#priority').val() || '');
                oTable.columns(1).search($('#status').val() || '');
                oTable.columns(2).search($('#category').val() || '');
                //hit search on server
                oTable.draw();
            });
            $.fn.dataTable.ext.search.push(
                function (settings, data, dataIndex) {
                    var min = $('#start_date').datepicker("getDate");
                    var max = $('#end_date').datepicker("getDate");
                    var invoiceDate = new Date(data[5]);

                    if (min == null && max == null) { return true; }
                    if (min == null && invoiceDate <= max) { return true; }
                    if (max == null && invoiceDate >= min) { return true; }
                    if (startDate <= max && invoiceDate >= min) { return true; }
                    return false;
                }
            );
            $.fn.dataTable.ext.errMode = 'none';
            $('#datatable')
                .on('error.dt', function (e, settings, techNote, message) {
                    console.log('An error has been reported by DataTables: ', message);
                    //alertify.error("Unable to connect to the remote server");
                })
                .DataTable();
        });

     var popup;
        function PopupForm(url) {
            var formDiv = $('<div/>');
            $.get(url)
                .done(function (response) {
                    formDiv.html(response);
                    popup = formDiv.dialog({
                        autoOpen: true,
                        resizable: false,
                        height: 300,
                        width: 500,
                        close: function () {
                            popup.dialog('destroy').remove();
                        }
                    });
                });
        }

        function SubmitForm(form) {
            var formData = new FormData(form);
            // to validate the form before submiting
            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                $.ajax({
                    type: "POST",
                    url: form.action,
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        if (data.success) {
                            popup.dialog('close');
                            //refresh table
                            $('#datatable').DataTable().ajax.reload();
                            $.notify(data.message, {
                                globalPosition: 'top center',
                                className: "success"
                            });
                        }
                        else {
                            $.notify(data.message, {
                                globalPosition: 'top center',
                                className: "error"
                            });
                        }

                    }

                });
            }
            return false

        }

     
    </script>
</body>
</html>



